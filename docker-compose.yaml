version: '3'
services:
  proxy:
    # image: nginx:alpine-slim
    image: nginx
    ports:
        - "80:80"
    volumes:
      - ${PWD}/nginx1/nginx.conf:/etc/nginx/conf.d/default.conf
      - ${PWD}/app_data2:/usr/share/nginx/html/c/app_data2
      - ${PWD}/static:/usr/share/nginx/html/static/static1
    networks:
      - for_app
    depends_on:
      - app
    
  
  
  app:
    build: .
    container_name: app
    # ports:
    #   - "8000:8000"
    networks:
      - for_app
      - for_db
    volumes:
      - ${PWD}/app_data1:/var/www/gutendex/media/
      - ${PWD}/app_data2:/var/www/gutendex/static-root/

    depends_on:
      my_db:
        condition: service_healthy 

  my_db:
    build: ./postgres
    container_name: my_db
    # image: postgres:14
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: gutendex
      #test
      PGDATA: /var/lib/postgresql/data/pgdata
    # ports:
    #   - "5432:5432"
    volumes:
      - my_data:/var/lib/postgresql/data
    networks:
      - for_db
    # command: psql -U postgres -c 'GRANT ALL PRIVILEGES ON DATABASE gutendex TO postgres;'
    healthcheck: # check the healthiness with the following configuration
      test: ['CMD', 'psql', '-U', 'postgres', '-c', 'SELECT 1']
      interval: 10s
      timeout: 10s
      retries: 15

networks:
  for_app:
  for_db:

# networks:
#   default:
#     name: mynet
#     external: true

volumes:
  my_data:
  